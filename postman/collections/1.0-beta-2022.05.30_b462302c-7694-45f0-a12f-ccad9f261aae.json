{
	"info": {
		"_postman_id": "78128fcb-80a2-474f-93ef-f775c100916b",
		"name": "1.0-beta-2022.05.30",
		"description": ">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "질문 담당하기",
					"id": "6460f721-c0fa-40a6-aadb-64a594a732c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"questionId\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/administration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"administration"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "6e18426d-bb2d-427f-aa9a-59ec97281092",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"requestId\": \"<string>\",\n\t\"adminstrationId\": \"<number>\"\n}"
						},
						{
							"id": "45634438-0274-4b3f-a044-bca2a2e8891b",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0d44821d-fb60-46b2-b5b6-4c2698db2a80",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "bdada159-205c-4e0a-8e23-1faa454a2af8",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "d59af3dc-3358-4dc8-ae87-3aa0d1dd2c98",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문 담당 위임 / 해제",
					"id": "c0a704ae-3e3d-4710-990a-c7e8718df1f9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"questionId\": 5,\n\t\"type\": \"DELEGATION\",\n\t\"delegateTo\": \"G\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/administration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"administration"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "1468a973-c3b9-43a7-96f0-a04f7c3940af",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"requestId\": \"<string>\",\n\t\"prevAdminstrationId\": \"<number>\",\n\t\"nextAdminstrationId\": \"<number>\"\n}"
						},
						{
							"id": "27131211-8ad1-43b5-9e1c-3ff287de8f04",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9bbbe3f3-3b54-4833-b490-ce9576d8f554",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "6076b691-34fe-498d-b344-8b9a23dab709",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문/답변 신고 및 마스킹 해제요청 검수하기",
					"id": "a3bd0903-6de2-452b-afee-de5ed798006a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"qaType\": \"ANSWER\",\n\t\"answerId\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspection"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "e3a6aacc-4aea-42e2-8a57-385302270fe1",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"InspectionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "2cd2cfb6-99f2-47fc-90ad-c8f1c95dee67",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b5392844-ae0c-4d6d-b13c-4fd2b47f6200",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "79f1120f-7b92-4546-9cd9-d3ad04cf4cb5",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9946d1e5-842c-4fc0-ab0c-349ccb94fd78",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문/답변 신고 마스킹 해제요청 검수 담당 위임 / 검수 처리 / 검수 당당 해제",
					"id": "be762e8c-6541-489a-ab28-712f8fbc9e0d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"type\": \"DELEGATION\",\n\t\"delegatedTo\": \"G\",\n\t\"qaType\": \"ANSWER\",\n\t\"answerId\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspection"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "a5606d5a-b168-4a19-9c87-fb96e970b78b",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"InspectionId\": \"<number>\",\n\t\t\"prevInspectionId\": \"<number>\",\n\t\t\"newInspectionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "5989757b-e9b3-46a1-b39a-ab8265d9c3df",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "20a91681-2333-4e36-a3f0-51f5e157394e",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9efa69cf-656a-46da-9db3-959014d8f918",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질/답 (신고접수) 리스트 가져오기",
					"id": "9c20b2d7-e41a-4fe4-97f6-25136a3b5410",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"state\": \"WAITING\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"c\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspections"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "f8ff7bbb-4f5d-4c71-abcd-4a69a0fb9394",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"type\": \"<string>\",\n\t\t\"id\": \"<number>\",\n\t\t\"message\": \"<string>\",\n\t\t\"lastComplaintAt\": \"<string>\",\n\t\t\"masked\": \"<boolean>\",\n\t\t\"inspectionIds\": [\n\t\t\t\"<integer>\",\n\t\t\t\"<integer>\"\n\t\t],\n\t\t\"adminId\": \"<string>\",\n\t\t\"inspected\": \"<boolean>\",\n\t\t\"createdAt\": \"<string>\",\n\t\t\"updatedAt\": \"<string>\",\n\t\t\"requestId\": \"<string>\",\n\t\t\"totalCount\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "015689ec-cf23-4dec-8b4a-c406d92d80fb",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0c4fbde6-5429-4771-91c0-4ea158484679",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "cbec01e8-7b4a-41b4-9dea-df4078adcee8",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문/답변 신고내역 가져오기",
					"id": "92eca553-2c1e-46e5-b44d-04836a75121f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"QUESTION\",\n\t\"questionId\": 64\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspection_unit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspection_unit"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "ea702c1b-6c9f-4c56-bb39-b2c1b30bbb4d",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection_unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection_unit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"inspectionUnit\": {\n\t\t\t\"target\": \"<string>\",\n\t\t\t\"question\": {\n\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"message\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"answser\": {\n\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"message\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"lastComplaintAt\": \"<string>\",\n\t\t\t\"complaints\": [\n\t\t\t\t{\n\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\"reason\": \"<string>\",\n\t\t\t\t\t\"inspected\": \"<boolean>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\"reason\": \"<string>\",\n\t\t\t\t\t\"inspected\": \"<boolean>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inspections\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}"
						},
						{
							"id": "ecce540d-e601-4af9-920f-2058d48adfce",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection_unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection_unit"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "26e46ec4-005f-4a99-89d9-5c9a2237fa64",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection_unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection_unit"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "어드민용 질문 검색",
					"id": "306b71e6-f2c7-4677-a92d-9240ddb6ac43",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"bestOnlyForSimilar\": true,\n\t\"questionId\": 8\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"question"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "5f708d07-d8f5-4ced-9b27-ed363f61069c",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "5c3bf56b-6ec0-4458-96e5-6e62e2460794",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "a44ad217-b5a4-4c24-824f-cb82b74f9a0b",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "788ed1fc-eca7-47c6-85b2-a06db835d9d6",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "답변없는 질문 검색",
					"id": "f23777b1-a5f8-4144-bd21-8f82b3d59ceb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/questions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"questions"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "371a33fb-f676-40b6-b344-716f52eed14d",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "1b26ddab-4056-4d7c-95ec-bc62e1b9025e",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "d96dc323-707d-408f-8383-7250ee850695",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "02399b80-46e2-474c-8db8-03cc7f290521",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "유저 제한 / 해제",
					"id": "03c83dd1-ffbf-41d9-bc40-6f1619a31e6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"userInfoId\": \"A\",\n\t\"type\": \"RESTRICTION\",\n\t\"description\": \"운영정책 위반\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/user_management",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"user_management"
							]
						},
						"description": "* 유저 제한하기 (질문.답변.q/r대상 제외시키기)\n* 유저 제한 해제하기\n"
					},
					"response": [
						{
							"id": "cae0c823-4dbf-4b27-b384-855857ec3d6d",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userManagementId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8b0cbeaf-6228-40bc-98d4-896947cbda96",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "1132d32b-162e-4610-8904-c9e6e327c0c6",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "fff2f92b-1c67-44a1-a9eb-13010f0d7424",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "f77850c1-3b1e-42f5-91fe-d2b1148556d1",
			"description": "## 어드민"
		},
		{
			"name": "ANSWER",
			"item": [
				{
					"name": "답변 등록",
					"id": "8eaacb5f-164e-498b-bcf2-4eac826710b2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"B\",\n\t\"questionId\": 5,\n\t\"type\": \"GENERAL\",\n\t\"answer\": \"4명까지 모일 수 있습니다.\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"latitude\": 35.1586728,\n\t\t\t\"longitude\": 129.1598677,\n\t\t\t\"name\": \"해운대 해수욕장\",\n\t\t\t\"domainName\": \"부산 해운대구 해운대해변로 264\",\n\t\t\t\"poiId\": 123412\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/answer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"answer"
							]
						},
						"description": "> * 일반 답변 등록\n> * 자동 답변 등록 (backend 전용)\n"
					},
					"response": [
						{
							"id": "915e0979-28a8-4528-b218-af3fc9e1ae6f",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"answerId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "d050c034-7b47-4448-b5a8-2618ed27f23e",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0265f43f-a472-495a-9cca-d4157fe2dc53",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e22432f1-3242-4ba1-9462-ac2068932e4a",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "98f370ae-8bd2-4495-a22a-67ed4e7a31de",
							"name": "423 - Locked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Locked (WebDAV) (RFC 4918)",
							"code": 423,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b37a9160-820e-4872-aff4-7212c3d61492",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "e4901906-3e99-4e08-b2f8-32b2aae620a9",
			"description": "## 답변"
		},
		{
			"name": "COMPLAINT",
			"item": [
				{
					"name": "질문 / 답변 신고하기, 질문 /답변 마스킹 해제요청하기",
					"id": "9ade1c57-37c7-4f24-bf76-4c8d856412de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"D\",\n\t\"type\": \"QUESTION\",\n\t\"questionId\": 5,\n\t\"reason\": \"MEANINGLESS\",\n\t\"description\": \"의미없는 질문인것 같습니다.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/complaint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"complaint"
							]
						},
						"description": "* 질문 신고하기\n* 답변 신고하기\n* 질문 마스킹 해제 요청하기\n* 답변 마스킹 해제 요청하기\n"
					},
					"response": [
						{
							"id": "adbc92fb-09cc-4a4f-a89a-3e88e81881bb",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"qaComplaintId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "5e6688b8-7805-47ed-a71e-cbe48fbe1963",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8777f798-d8dd-4173-9cf4-f110b8032b65",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "a86b2512-5c36-44f3-bbad-20b7659e9019",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0c9560e7-a807-469a-8ac3-59a554bce321",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "c46b680f-a33f-4fea-81fe-2e4c2b94f041",
			"description": "## 게시글 불만제기"
		},
		{
			"name": "MIRRORING",
			"item": [
				{
					"name": "질문 / 답변 세트 조회",
					"id": "2f111f27-c3d5-4ae4-a0a2-f683cd8a439a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": \"2021-12-12T09:00:03.280Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dump",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dump"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "55baf4fd-c043-485f-b15e-8b36f60c3059",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\",\n\t\"bestOnly\": \"<boolean>\",\n\t\"unmaskedOnlyForQuestion\": \"<boolean>\",\n\t\"unmaskedOnlyForAnswer\": \"<boolean>\",\n\t\"debugMode\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ca3700e0-c5ad-4faa-b1dd-db06ca3dbe4c",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\",\n\t\"bestOnly\": \"<boolean>\",\n\t\"unmaskedOnlyForQuestion\": \"<boolean>\",\n\t\"unmaskedOnlyForAnswer\": \"<boolean>\",\n\t\"debugMode\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e0eecddf-6677-4778-a1d8-d585baf1259c",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\",\n\t\"bestOnly\": \"<boolean>\",\n\t\"unmaskedOnlyForQuestion\": \"<boolean>\",\n\t\"unmaskedOnlyForAnswer\": \"<boolean>\",\n\t\"debugMode\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "통계 처리용 데이터 조회",
					"id": "74fdcdc4-90bd-435d-acd1-00ce4c312d04",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": \"est exercitation\",\n\t\"to\": \"consectetur nisi deserunt anim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dump/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dump",
								"statistics"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "b0dd3228-e2be-41c5-95b9-7f783449e238",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump",
										"statistics"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "7f197aea-87c8-4dd2-9137-7774b3ee93a7",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump",
										"statistics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ae38818e-0f01-41c7-b672-78aa83a0e641",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump",
										"statistics"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "2c922346-1c71-425b-b7b8-54b54c372f20",
			"description": "## 미러링"
		},
		{
			"name": "PROXY",
			"item": [
				{
					"name": "(Tmap 통합검색 서비스) 위치명 기반 POI 검색",
					"id": "b3c097f6-9872-46ab-a029-cf23703849c8",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/total-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"total-search"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "7b6fce32-ee41-4695-b053-cfbe9e3e6bbc",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/total-search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"total-search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "38283eff-22be-4c6c-8a2d-94ffd7961804",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/total-search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"total-search"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Tmap reverse geocoding서비스) 사용자 좌표기반 지역명 검색",
					"id": "b5a42fdd-21a5-4636-a1f5-e11b31857839",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/reverse-geocoding",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"reverse-geocoding"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "a30ebe98-5a8f-4b54-80a4-af7e27e8a8a8",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/reverse-geocoding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"reverse-geocoding"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "e0c1dc19-2f42-40da-bf6c-c6daaf29e3e1",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/reverse-geocoding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"reverse-geocoding"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Tmap StaticMap 서비스) 정적 지도 이미지 가져오기",
					"id": "b19e2ba0-f7bc-4583-8a3d-6bbd46e0a7a0",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/static-map",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"static-map"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "b44eb7ac-8126-449c-9061-008bb436c7e1",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/static-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"static-map"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "683e67a9-f424-4d5a-9f5c-efdf7766c4cf",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/static-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"static-map"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Tmap V2 서비스) 자바스크립트 소스 가져오기",
					"id": "700e9371-a562-43b2-8d51-870e2d88b646",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/dynamic-map",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"dynamic-map"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "44c7208f-aa0c-4bb4-b084-b024eeca4886",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/dynamic-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"dynamic-map"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "5dc29c1f-9e6b-45de-98d3-b2282def8641",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/dynamic-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"dynamic-map"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(NUGU 질의 분석기) 사용자 발화내 위치명 검색",
					"id": "2642ef36-e94a-48ff-b10e-01f6c8eebac6",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/nugu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"nugu"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "0bdb42da-3644-41df-983a-17a66c558b8d",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/nugu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"nugu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "68630480-ae8d-43a0-9012-63c8e2a3dcf8",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/nugu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"nugu"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Safety module) 사용자 발화내 욕설 포함여부 검사",
					"id": "831d2131-f6e5-409d-86bf-5ce591becfe8",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/safety",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"safety"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "bfd5804d-836d-4fbe-817d-406ddfe2e946",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "a75210a1-163c-4566-b4a8-78fb479b215b",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Safety module) 사용자 발화내 욕설 포함여부 검사 (batch)",
					"id": "a12ff408-bd80-4d32-8c0b-9325aff9f00a",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/safety",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"safety"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "e9dd2d3e-3879-4907-905c-ce2ee65122e7",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "4a9f9e52-8cad-4dae-b9d8-49fd3fd8f55d",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(User profile) 유저 프로필 검색",
					"id": "569af433-9fe7-4977-85ad-71898a4d1922",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/user-profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"user-profile"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "96715c42-8e72-49b3-997b-18d65e8a952d",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/user-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"user-profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "f617c990-1fdc-4d18-864b-f243b01555a0",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/user-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"user-profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "a8945863-de35-4e65-8ea1-0f8e457fb677",
			"description": "## 프록시 TiDC 내부 서비스 접근용\n> 각 호출대상 서비스에 따라 상이함 (해당 API들은 TiDC 서비스들을 proxy하는 역할만 하므로, 대상 TiDC 내 서비스들이 입력받는 parameter들과 body spec을 그대로 입력받음)\n> Spec등은 호출 대상 서비스 API 담당자에게 문의 \n* 각 담당자정보는 https://tde.sktelecom.com/wiki/pages/viewpage.action?pageId=395790584& 페이지 참고\n"
		},
		{
			"name": "QUESTION",
			"item": [
				{
					"name": "질문 등록",
					"id": "3d60e7f0-0199-4913-9862-2c4425f8f51b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"userInfoId\": \"A\",\n \"question\": \"해운대해수욕장 모임 인원제한 있나요?\",\n \"type\": \"REALTIME\",\n \"location\": {\n  \"latitude\": 35.1586728,\n  \"longitude\": 129.1598677,\n  \"domainName\": \"해운대 해수욕장\",\n  \"poiId\": 123412\n },\n \"routingCondition\": {\n  \"ageRange\": 2,\n  \"sex\": \"ALL\"\n },\n \"ageRange\": 1,\n \"domainName\": \"부산시 해운대구\",\n \"latitude\": -36136897.73570132,\n \"longitude\": 54434824.632458955,\n \"name\": \"해운대 해수욕장\",\n \"sex\": \"ALL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"question"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "75da4565-1849-4ad2-ac78-1c15dd137246",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": -78766338.777235\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "88752fe0-ab30-4908-839f-d521bc1961c8",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": -78766338.777235\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n \"statusCode\": 13974225.597090855,\n \"headers\": \"<string>\",\n \"multiValueHeaders\": \"<string>\",\n \"body\": {\n  \"requestId\": \"<string>\",\n  \"reason\": \"<string>\"\n }\n}"
						},
						{
							"id": "61d0231a-2952-4c9b-afee-b027995ff31d",
							"name": "423 - Locked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": -78766338.777235\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Locked (WebDAV) (RFC 4918)",
							"code": 423,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n \"statusCode\": 13974225.597090855,\n \"headers\": \"<string>\",\n \"multiValueHeaders\": \"<string>\",\n \"body\": {\n  \"requestId\": \"<string>\",\n  \"reason\": \"<string>\"\n }\n}"
						},
						{
							"id": "923feffd-1958-47df-9332-0a7f38c2b238",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": -78766338.777235\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n \"statusCode\": 13974225.597090855,\n \"headers\": \"<string>\",\n \"multiValueHeaders\": \"<string>\",\n \"body\": {\n  \"requestId\": \"<string>\",\n  \"reason\": \"<string>\"\n }\n}"
						}
					]
				},
				{
					"name": "질문 답변 연장, 유사질문 리스트 업데이트",
					"id": "a476cce1-36fd-4cfd-ace2-cebf4862a40b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionId\": 5,\n\t\"extensionTime\": 3600000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"question"
							]
						},
						"description": "* 질문 답변 연장\n* 유사질문 리스트 업데이트 (backend 전용)\n"
					},
					"response": [
						{
							"id": "0accdb9a-b95f-4869-aad2-4e3fd22c1067",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "b05fc489-e568-4e1e-bc27-4d7f536315fe",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8ee3991e-cf86-48d2-8396-62c5db13b046",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "61d13659-a389-4673-b5c3-62716cb14183",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "01ccb02f-5af6-449d-9216-99a4cacec24c",
			"description": "## 질문"
		},
		{
			"name": "REGION",
			"item": [
				{
					"name": "시도 검색",
					"id": "4a72c3e8-a860-481a-8117-968806ace634",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/region/province",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"region",
								"province"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "9d56d0a8-d386-4004-9f7c-d3b494881c26",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"provinces\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"alternativeNames\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t]\n\t}\n}"
						},
						{
							"id": "0f01fee8-3c2b-43b8-835f-0dca453ba752",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e04a6247-59dd-4352-9e6b-3a88d5e654f6",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "12b459aa-2531-4cda-b3e0-640d4ba973e8",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "시군구 검색",
					"id": "710cf9c4-e06f-4ab2-8fe5-a6bf5c02cdfc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"province\": [\n\t\t\"제주특별자치도\"\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/region/county",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"region",
								"county"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "e260f17f-be58-40d0-bccd-35ff9c6301f5",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"counties\": [\n\t\t\t{\n\t\t\t\t\"province\": \"<string>\",\n\t\t\t\t\"county\": \"<string>\",\n\t\t\t\t\"fullName\": \"<string>\",\n\t\t\t\t\"alternativeNames\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"province\": \"<string>\",\n\t\t\t\t\"county\": \"<string>\",\n\t\t\t\t\"fullName\": \"<string>\",\n\t\t\t\t\"alternativeNames\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "aebad2e2-930a-4039-859d-e44d14d75848",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "6b07a5b0-6315-4038-aaa7-b88dceeaefbf",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "3e5ef8f2-2b55-48e3-bb4a-c7db0e1b03a0",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "89f935b8-565c-4442-814a-14ac120ef10a",
			"description": "## 지역검색"
		},
		{
			"name": "REMARK",
			"item": [
				{
					"name": "나도 궁금해요 리스트에 유저 정보 추가 / 삭제",
					"id": "d7baf640-4a94-4e72-82dd-2a394fa7fa8d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionId\": 5,\n\t\"userInfoId\": \"B\",\n\t\"type\": \"ADD\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/remark",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remark"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "385ab1f5-8998-49c2-8d33-02e639e2ff3f",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"remarkId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ab305d31-7ebf-41ec-8357-b3edbc9fbf24",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "760d74c1-1eab-492b-a6d8-288241f6651e",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "a815006a-d966-4df2-be35-ceaae924b23a",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ffbfd125-4bff-48ec-964d-d5584d75e550",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "aa32e014-41cb-4a21-b487-ef45eb78c43a",
			"description": "## 나도 궁금해요"
		},
		{
			"name": "REWARD",
			"item": [
				{
					"name": "도움이 됐어요 리스트에 유저 정보 추가",
					"id": "dbe55ee6-db0d-40b4-9947-4f63c24de611",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"answerId\": 7,\n\t\"userInfoId\": \"C\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reward",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "56d69f92-60ff-4bd6-ab26-3518d4c5b2a4",
							"name": "Successs",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"remarkId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8ef15b33-606c-42ff-8fe8-41d883f68b9e",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ac232a4f-6c80-4a2e-b22d-577bd7a9458a",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b29d83e6-9258-4ff7-bc55-7c49e45fc9ab",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8de4c453-5593-4d4f-a97b-dce551262b27",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "0c2fb7b7-f604-4a03-964d-9cbbaddfe525",
			"description": "## 도움이 됐어요"
		},
		{
			"name": "ROUTING",
			"item": [
				{
					"name": "라우팅 정보 생성",
					"id": "fbbefac3-896f-49ef-a0dd-67473ac9b241",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoIds\": [\n\t\t\"B\",\n\t\t\"C\",\n\t\t\"D\",\n\t\t\"E\"\n\t],\n\t\"questionId\": 5,\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"MAIN\",\n\t\t\t\"domainName\": \"해운대구 우동\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"MAIN\",\n\t\t\t\"domainName\": \"유성구 상대동\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"REALTIME\",\n\t\t\t\"domainName\": \"마포구 아현동\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"RECENT\",\n\t\t\t\"domainName\": \"마포구 상암동\"\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/routing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routing"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "532464d4-b069-4870-bf0d-d0bf7fda5074",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"routingId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "44123012-6976-4705-929f-c8508fc0f181",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ac649c37-1e30-406f-a17e-a53145e44847",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "95f71ee9-2af0-48bc-949e-541587d22366",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9921e899-52b7-43b9-b2a3-072da6aaa140",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "d1bb8cc2-fbe1-4068-b4a4-3f940b537a18",
			"description": "## 라우팅"
		},
		{
			"name": "SEARCH",
			"item": [
				{
					"name": "단일 질문-답변 검색",
					"id": "26e81cf6-688e-4564-9b05-3e3560c1d7ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionId\": 1,\n\t\"withAnswer\": true,\n\t\"bestOnly\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"question"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능\n* userInfoId가 없을 때는 질문 검색만함\n* userInfoId가 있을 때 A2A userInfo 테이블에 등록여부 확인 및 생성\n* 질문의 userInfoId와 parameter의 userInfoId가 같은 경우 보낸 질문 `N` 제거\n* 질문의 userInfoId와 parameter의 userInfoId가 다른 경우 받은 질문 `N` 제거\n* userInfoId parameter의 역할은 원칙적으로 질문을 특정 유저 ID로 조회함으로써 **받은 질문** 또는 **보낸 질문** 페이지에서 `N` 배지를 없애려는 때에만 사용\n* 기존에는 해당 유저 ID가 ‘받은 질문’ 또는 **보낸 질문**, **나도 궁금해요**에 해당하는 질문이 아닌 경우에는 Bad request가 발생하도록 하였으나, \n임의의 유저 ID로 보낸다고 해도 질문 검색의 본질을 해치는 것은 아니므로 `N` 배지제거 기능은 스킵하고 정상적으로 질문 답변이 검색되도록 변경 (log level WARN 생성)\n"
					},
					"response": [
						{
							"id": "01abd131-0d78-4af2-acf3-e1dc7376115f",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "dedf74a8-cbf4-40d5-aa5b-5bde819d0b01",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "d0faae0e-bbe1-4eaf-99c1-5d688a287ec7",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b4550fc7-1821-42ec-a556-145ec46b01cb",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "다중 질문-답변 검색",
					"id": "cceaa3e0-c309-4434-9dd2-db8eb29446fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionIds\": [\n\t\t1,\n\t\t2\n\t],\n\t\"bestOnly\": false,\n\t\"withAnswer\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/questions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"questions"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "941e4fbb-2519-4a9c-9847-a6c952fb5f1d",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "24f4d9c6-e1ec-4300-8892-2b3f5bb723e7",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "423eee66-9871-4b4f-ac49-b4c7fb4b0d9a",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0aa0ceb8-e490-4df5-b2d1-ca4f7ee3fa86",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "my -> 받은 질문 / 답변 검색",
					"id": "0e115bc2-724e-4780-82e5-12ad8d7490b3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"B\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/routed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"routed"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "3bc13dbf-de04-4833-86cb-0a80e4c0e1d7",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "3e1ccd8a-6115-45d7-b04c-c5ff2438b570",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f1fafc58-ff40-45a4-b71c-16cb34e93ca1",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e3a6ab05-ed61-4ccf-b27c-9256a8a1b556",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "my -> 보낸 질문 / 답변 검색",
					"id": "dab836b3-5379-4474-996e-6bcab1f0c6ec",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"target\": \"ALL\",\n\t\"userInfoId\": \"D\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/sent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"sent"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "c66a36ee-9142-4ea4-906c-5004dd271ac0",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "29591243-097b-4d73-b78a-301c9863a36d",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "03e5a30d-7aff-49a8-a301-a75f88806c87",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0733a5fc-f1f9-4681-8efa-3bd40988b83c",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "39e51af0-bbc0-4bd4-abdb-79d3bfec7e74",
			"description": "## 검색"
		},
		{
			"name": "STATISTIC",
			"item": [
				{
					"name": "어드민 대시보드 통계",
					"id": "75ee91b4-87bf-4053-af0f-0c1a252146f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"timeOffset\": -0.4284726818650686,\n\t\"adminId\": \"id Ut\",\n\t\"waitForUpdate\": \"ad Excepteur\",\n\t\"year\": false,\n\t\"month\": true,\n\t\"day\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"statistics"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능\n* 순위 선정용 배치 처리 필요 (eg. 1시간 한번씩 수행)  \n* 대시보드, 통계 페이지용 API 통합  \n* 질문/답변 통계 구현 완료  \n* 신고 통계 구현중\n"
					},
					"response": [
						{
							"id": "c80f7fe9-b65f-4cbc-8720-8d42a70fffc6",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"statistics\": {\n\t\t\t\"monthlyStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nUrgentNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAdminAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"monthlyAdminStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"averageAnswerDelay\": \"<number>\",\n\t\t\t\t\"answerAdminRank\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"averageInspectionDelay\": \"<number>\",\n\t\t\t\t\"inspectionRank\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"dailyStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nUrgentNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAdminAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"dailyAdminStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"averageAnswerDelay\": \"<number>\",\n\t\t\t\t\"answerAdminRank\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"averageInspectionDelay\": \"<number>\",\n\t\t\t\t\"inspectionRank\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						{
							"id": "9a80ccab-56a8-4e3b-b049-6408d5e9826e",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ebf30032-548d-47c4-89ec-2824627d1f33",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "03ebce7f-27b6-473d-8062-32b284b72619",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "61e1de40-4db1-40a6-9e28-5fbbeef541e4",
			"description": "## 통계"
		},
		{
			"name": "USER",
			"item": [
				{
					"name": "유저 정보 등록",
					"id": "2750f7e6-67cd-421a-a18a-d67562409bd8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"lunaId\": \"A\",\n\t\"role\": \"GENERAL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_info"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "73282fc6-585a-4d80-a31a-0e61121eb494",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "6095b7ff-295e-40af-83f7-e1b67eb2b71b",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "3c3eb5c0-ac44-49a0-8bb5-98e30711bdd7",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "2ee0f408-e8a7-47c2-a7ed-5e434a3a59b3",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "유저 정보 수정",
					"id": "3efb1945-0d03-4183-a7b9-4a77e7c56d90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"A\",\n\t\"role\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_info"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "24481252-6577-4fab-b90c-5a16b8c5b337",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "efcbec56-5532-47a2-a2ba-cf6bb83b5350",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "15374008-1a2d-4448-b4ff-2fa3ee29b7c8",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "유저 정보 삭제",
					"id": "78244a05-c28e-4b67-8ce0-32d90ba4f764",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_info"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "417b2b95-0654-4aba-ab2e-3916f8b51898",
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "52d9a48f-5461-401a-bffc-b25a2240d307",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "5525ef72-8c0e-4447-924a-3270a882a027",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "e06a4a7a-5da6-4bc9-a9e9-e93e0df8d9a4",
			"description": "## 유저"
		},
		{
			"name": "VERSION",
			"item": [
				{
					"name": "API 버전 정보",
					"id": "d7e663d5-a47b-4474-9252-122a2e526a48",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "83ae955d-3334-4feb-9ffc-aac3a74185b4",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"versions\": {\n\t\t\t\"revision\": \"<string>\",\n\t\t\t\"buildTimestamp\": \"<string>\",\n\t\t\t\"gitCommitHash\": \"<string>\",\n\t\t\t\"gitTag\": \"<string>\"\n\t\t}\n\t}\n}"
						}
					]
				}
			],
			"id": "7696df7f-6722-435b-8320-5a5640c81ad9",
			"description": "## 버전 정보"
		},
		{
			"name": "보상",
			"item": [
				{
					"name": "TEST!!",
					"id": "c637a7e4-7e9f-4d7e-98f8-4cea16a8b575",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/TEST",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"TEST"
							]
						}
					},
					"response": []
				}
			],
			"id": "e65b7b92-6ce9-4350-a4d6-a76873778f14"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d8784e71-9303-48d9-a2be-ddf39928e82a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1deab4ee-f1fc-4571-b7d3-48d10da3b852",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "f36edb38-1b54-4821-a625-eb15e819600e",
			"key": "baseUrl",
			"value": "https://api-dev.a2a.apollo-ai.io/v1",
			"type": "string"
		}
	]
}