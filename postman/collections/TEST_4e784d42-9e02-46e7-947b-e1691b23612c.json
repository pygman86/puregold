{
	"info": {
		"_postman_id": "e44a3d77-9bfd-4bac-8b30-a4d0137db667",
		"name": "TEST",
		"description": "> ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "질문 담당하기",
					"id": "c87c9aac-4c67-405e-817c-82c0995b9f2f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"questionId\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/administration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"administration"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "5416116c-a122-4c71-80c8-4c7b3d2ba29f",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"requestId\": \"<string>\",\n\t\"adminstrationId\": \"<number>\"\n}"
						},
						{
							"id": "2dd0c949-fe0e-4967-9fb9-3b3ca5232e3e",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "a5da9001-66b1-4074-b5cc-c43b49c3dc76",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "88bbcac7-323b-4003-8fc4-4654c9c69552",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "bfb7e7f1-747f-45a9-abef-cdc229ad5d60",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문 담당 위임 / 해제",
					"id": "4409235b-b791-444a-a531-3ec1f8282f7f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"questionId\": 5,\n\t\"type\": \"DELEGATION\",\n\t\"delegateTo\": \"G\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/administration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"administration"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "992d9bb2-ddbd-47dd-aece-5770dce87a31",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"requestId\": \"<string>\",\n\t\"prevAdminstrationId\": \"<number>\",\n\t\"nextAdminstrationId\": \"<number>\"\n}"
						},
						{
							"id": "51df6f24-d009-42c6-9127-ecbc1de88c55",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "a3a1034f-466b-481e-9195-0f996b15a436",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "bef68ba9-26f3-4dc9-910d-0c232de4cf83",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"delegateTo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/administration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"administration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문/답변 신고 및 마스킹 해제요청 검수하기",
					"id": "08bcb078-ba03-4944-9024-989248615d28",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"qaType\": \"ANSWER\",\n\t\"answerId\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspection"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "f6027b0d-44e3-46f5-bb3c-93f7ee83a61b",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"InspectionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "41220e88-4064-4c74-a772-75f4930c134d",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "44381498-f5f7-4c34-a2d0-25d7ee9e9516",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "27c5536a-4733-4abb-a3ab-20bfa6b32474",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8f3defc6-861a-4d94-942d-8fecd8af66e1",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"questionId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문/답변 신고 마스킹 해제요청, 검수 담당 위임 / 처리 / 해제",
					"id": "fb239055-f770-4a56-9d9d-17cbcfa7b2ba",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"type\": \"DELEGATION\",\n\t\"delegatedTo\": \"G\",\n\t\"qaType\": \"ANSWER\",\n\t\"answerId\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspection"
							]
						},
						"description": "* 질문/답변 신고 및 마스킹 해제요청 검수 담당 위임\n* 질문/답변 신고 및 마스킹 해제요청 검수 처리\n* 질문/답변 신고 및 마스킹 해제요청 검수 담당 해제\n"
					},
					"response": [
						{
							"id": "9a40454a-1a14-4cb5-bfef-a3f923f11ad5",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"InspectionId\": \"<number>\",\n\t\t\"prevInspectionId\": \"<number>\",\n\t\t\"newInspectionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "9b40425d-c9dc-4e88-a329-f992d13f7870",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "121f8823-d61b-48c0-8ebd-81cda66e8502",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f0bb97a0-6c30-4792-ace7-24ec52c600ab",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"<string>\",\n\t\"qaType\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"delegatedTo\": \"<string>\",\n\t\"decision\": \"<string>\",\n\t\"description\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질/답 (신고접수) 리스트 가져오기",
					"id": "53976611-01a2-47e7-a538-47d7676badf5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"state\": \"WAITING\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"ut dolore\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspections"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "b6f4e42d-a1df-4938-99db-1b4c1402e734",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"type\": \"<string>\",\n\t\t\"id\": \"<number>\",\n\t\t\"message\": \"<string>\",\n\t\t\"lastComplaintAt\": \"<string>\",\n\t\t\"masked\": \"<boolean>\",\n\t\t\"inspectionIds\": [\n\t\t\t\"<integer>\",\n\t\t\t\"<integer>\"\n\t\t],\n\t\t\"adminId\": \"<string>\",\n\t\t\"inspected\": \"<boolean>\",\n\t\t\"createdAt\": \"<string>\",\n\t\t\"updatedAt\": \"<string>\",\n\t\t\"requestId\": \"<string>\",\n\t\t\"totalCount\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "da1b3c05-4f3c-4b0d-ab16-ab572b715b67",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "681fdbc2-99d4-4ff4-a57f-5929a744d91e",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "0e362be3-bdc8-49e1-a57c-e5a901a33287",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspections"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문/답변 신고내역 가져오기",
					"id": "238fff17-70da-49c4-a69d-1df277c7c503",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"QUESTION\",\n\t\"questionId\": 64\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/inspection_unit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"inspection_unit"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "330a5d50-95bc-474c-b768-2b4794e08699",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection_unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection_unit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"inspectionUnit\": {\n\t\t\t\"target\": \"<string>\",\n\t\t\t\"question\": {\n\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"message\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"answser\": {\n\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"message\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"lastComplaintAt\": \"<string>\",\n\t\t\t\"complaints\": [\n\t\t\t\t{\n\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\"reason\": \"<string>\",\n\t\t\t\t\t\"inspected\": \"<boolean>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\"reason\": \"<string>\",\n\t\t\t\t\t\"inspected\": \"<boolean>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inspections\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"<number>\",\n\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}"
						},
						{
							"id": "a6a86233-e4c5-42fa-b089-f45cdda82f10",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection_unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection_unit"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "39e368d8-65d0-4309-b93d-bfca2a75d1bf",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/inspection_unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"inspection_unit"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "어드민용 질문 검색",
					"id": "7bb08f96-23c1-498c-a6c6-dcef7831679d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"bestOnlyForSimilar\": true,\n\t\"questionId\": 8\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"question"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "3fa7ecef-1de5-4897-b51c-7f3cd1aefa16",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "5a17c9f6-ffc0-4df0-8627-b5912e917ad0",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f6b255d9-028b-4535-80f0-6c6ac9be864e",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "90ec174f-bdbf-4a98-82e8-2166ec78399a",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"bestOnlyForSimilar\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "답변없는 질문 검색",
					"id": "83bb33e8-1bc6-4e23-9726-d7bfaa54c90e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/questions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"questions"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "474fab55-68b1-4d64-b59a-0f92e6404949",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "84930be2-f570-4f6e-aea3-4c8e7832a607",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "60876123-c90c-42aa-b0c5-c120a73ce7ca",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "10fe087a-328e-4250-b4cf-f272f9bd4708",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"state\": \"<string>\",\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"adminIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"keyword\": \"<string>\",\n\t\"districts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"sortBy\": \"<string>\",\n\t\"descending\": \"<boolean>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"form\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"questions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "유저 제한 / 해제",
					"id": "227cdd79-9a49-4eaf-9446-5d389a099854",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"adminId\": \"F\",\n\t\"userInfoId\": \"A\",\n\t\"type\": \"RESTRICTION\",\n\t\"description\": \"운영정책 위반\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/user_management",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"user_management"
							]
						},
						"description": "* 유저 제한하기 (질문.답변.q/r대상 제외시키기)\n* 유저 제한 해제하기\n"
					},
					"response": [
						{
							"id": "9c6283f3-6bbc-4a00-a985-ef8cf08f38f5",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userManagementId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "4cc9dfe9-0def-43d4-bd67-2959ea8e9dbe",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b5332c36-f53c-41cf-93e1-3b7d072a0ee8",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "ad8859fc-d55c-4144-a0a0-9d8292018b32",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"adminId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/user_management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"user_management"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "f1c26826-13dd-4ede-a64a-7a647bbc5cda",
			"description": "## 어드민"
		},
		{
			"name": "ANSWER",
			"item": [
				{
					"name": "답변 등록",
					"id": "6376b2cd-de8a-4b86-8744-9eaee573daaa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"B\",\n\t\"questionId\": 5,\n\t\"type\": \"GENERAL\",\n\t\"answer\": \"4명까지 모일 수 있습니다.\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"latitude\": 35.1586728,\n\t\t\t\"longitude\": 129.1598677,\n\t\t\t\"name\": \"해운대 해수욕장\",\n\t\t\t\"domainName\": \"부산 해운대구 해운대해변로 264\",\n\t\t\t\"poiId\": 123412\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/answer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"answer"
							]
						},
						"description": "> * 일반 답변 등록\n> * 자동 답변 등록 (backend 전용)\n"
					},
					"response": [
						{
							"id": "8ffd1c9e-39a1-47b6-8e0c-24b9c0b9a144",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"answerId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9c9fe3e9-4f03-400a-a70d-0f2e280f5677",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c8cc224e-d792-48e2-8c98-4cc40d9a265d",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "d25bd380-bc1f-4c21-9683-73631d0e6b1f",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c1e69bd7-4995-4066-ba96-7442bb00b89d",
							"name": "423 - Locked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Locked (WebDAV) (RFC 4918)",
							"code": 423,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b36732b7-fdb0-4da8-b5d5-44dfd4d97dd8",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"originAnswerId\": \"<number>\",\n\t\"answer\": \"<string>\",\n\t\"locations\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"longitude\": \"<number>\",\n\t\t\t\"domainName\": \"<string>\",\n\t\t\t\"latitude\": \"<number>\",\n\t\t\t\"poiId\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/answer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"answer"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "d1228aec-5f42-4123-9cfa-47f13c860c86",
			"description": "## 답변"
		},
		{
			"name": "COMPLAINT",
			"item": [
				{
					"name": "질문 / 답변 신고하기, 질문 /답변 마스킹 해제요청하기",
					"id": "8500007a-0548-4662-9f7b-52c29b37b09d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"D\",\n\t\"type\": \"QUESTION\",\n\t\"questionId\": 5,\n\t\"reason\": \"MEANINGLESS\",\n\t\"description\": \"의미없는 질문인것 같습니다.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/complaint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"complaint"
							]
						},
						"description": "* 질문 신고하기\n* 답변 신고하기\n* 질문 마스킹 해제 요청하기\n* 답변 마스킹 해제 요청하기\n"
					},
					"response": [
						{
							"id": "48ec3f19-9884-4efa-8ae8-627f1d0964df",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"qaComplaintId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "117fcf50-657b-4c20-8db2-7b4336a610c0",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "815d3011-2607-4433-8bba-31d2ae5815c6",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "4c1c2a2a-bf77-4129-b9e2-afef616b3c33",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "96e8356f-ba14-40ff-be33-11753796172c",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"reason\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"answerId\": \"<string>\",\n\t\"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complaint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complaint"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "3480983a-76f7-4227-bce8-174b743df9dc",
			"description": "## 게시글 불만제기"
		},
		{
			"name": "MIRRORING",
			"item": [
				{
					"name": "질문 / 답변 세트 조회",
					"id": "a65e35a0-0404-4a8a-b998-babfc8656679",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": \"2021-12-12T09:00:03.280Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dump",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dump"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "c30512df-29fb-4d16-a1e6-94eb172c8511",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\",\n\t\"bestOnly\": \"<boolean>\",\n\t\"unmaskedOnlyForQuestion\": \"<boolean>\",\n\t\"unmaskedOnlyForAnswer\": \"<boolean>\",\n\t\"debugMode\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "dca822b4-6e6c-4c6e-98e6-56b6059f8064",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\",\n\t\"bestOnly\": \"<boolean>\",\n\t\"unmaskedOnlyForQuestion\": \"<boolean>\",\n\t\"unmaskedOnlyForAnswer\": \"<boolean>\",\n\t\"debugMode\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c5c250ec-d4e6-418d-b89f-2a0dc6d8d822",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\",\n\t\"bestOnly\": \"<boolean>\",\n\t\"unmaskedOnlyForQuestion\": \"<boolean>\",\n\t\"unmaskedOnlyForAnswer\": \"<boolean>\",\n\t\"debugMode\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "통계 처리용 데이터 조회",
					"id": "90406f6c-60ca-40bd-95c6-c585e6be0272",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": \"Lorem\",\n\t\"to\": \"laborum dolore tempor ut qu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dump/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dump",
								"statistics"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "23efbb95-7389-4875-866e-1419dc08a7d2",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump",
										"statistics"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e318e577-ac44-4955-ba32-931595b75f19",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump",
										"statistics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c2eeafbf-5bea-4de3-9d5a-fc74d58218d2",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dump/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dump",
										"statistics"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "3eb41791-10e2-4d21-b472-60d42367887e",
			"description": "## 미러링"
		},
		{
			"name": "PROXY",
			"item": [
				{
					"name": "(Tmap 통합검색 서비스) 위치명 기반 POI 검색",
					"id": "927b313c-e61f-42c5-95b4-4a87567d0b34",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/total-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"total-search"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "1602a0d4-434e-40a9-8638-64d759526f99",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/total-search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"total-search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "48e8ed79-ff9b-4153-b0de-5a3b6c8a8ab9",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/total-search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"total-search"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Tmap reverse geocoding서비스) 사용자 좌표기반 지역명 검색",
					"id": "cca48a6e-5b04-4e4a-ac1e-1946f92599e7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/reverse-geocoding",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"reverse-geocoding"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "c03fa05f-e6de-426a-9682-2a0368453d50",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/reverse-geocoding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"reverse-geocoding"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "c3242166-8bbf-41cd-8011-be081b2cdc14",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/reverse-geocoding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"reverse-geocoding"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Tmap StaticMap 서비스) 정적 지도 이미지 가져오기",
					"id": "55fd14b3-5171-449c-a73e-32b480f09ca5",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/static-map",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"static-map"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "6d6ebf9f-b091-4868-888f-405924a4f52e",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/static-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"static-map"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "39b76014-6cb0-458c-bd43-69949c81bfeb",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/static-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"static-map"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Tmap V2 서비스) 자바스크립트 소스 가져오기",
					"id": "3a8567f4-99ec-4baf-8e3d-8e82058ff8b6",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/tmap/dynamic-map",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"tmap",
								"dynamic-map"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "777df322-2e78-402e-9764-c6b2b048b159",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/dynamic-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"dynamic-map"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "52d0de78-0c3d-40f2-83ac-6a1ac487f826",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/tmap/dynamic-map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"tmap",
										"dynamic-map"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(NUGU 질의 분석기) 사용자 발화내 위치명 검색",
					"id": "7da0eb41-9445-46ea-be7b-7ff1eb3067f9",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/nugu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"nugu"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "1465edc5-a2d7-482e-975f-6c2411cbb117",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/nugu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"nugu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "630ab781-9177-4d88-807c-e7021dc26803",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/nugu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"nugu"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Safety module) 사용자 발화내 욕설 포함여부 검사",
					"id": "d6bc087a-fd26-40d3-b778-0eaf604c14fe",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/safety",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"safety"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "7f99dedc-9db6-4efc-a3fd-39ceb862ef73",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "45cc65d9-7ca3-4437-8e71-7a1795085011",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(Safety module) 사용자 발화내 욕설 포함여부 검사 (batch)",
					"id": "bd4c64b2-2f1f-4908-b00d-00f5448a0308",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/safety",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"safety"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "2a91db87-7cc0-4958-a2ca-53090e595700",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "0e427107-3b4f-4de8-94a3-7ec3e27bb423",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/safety",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"safety"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "(User profile) 유저 프로필 검색",
					"id": "a529ad7a-f154-4557-8a2e-7d186ca7b3dd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/proxy/user-profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"user-profile"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "fbf6368e-6a53-4f60-b2a4-534f38d36769",
							"name": "ProxyResponseBody",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/user-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"user-profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "8954a1f2-2f93-4e7a-aa71-2aefdfca7a77",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/user-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"user-profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "4edce1ba-72e5-4c67-922a-929e20293193",
			"description": "## 프록시 TiDC 내부 서비스 접근용\n> 각 호출대상 서비스에 따라 상이함 (해당 API들은 TiDC 서비스들을 proxy하는 역할만 하므로, 대상 TiDC 내 서비스들이 입력받는 parameter들과 body spec을 그대로 입력받음)\n> Spec등은 호출 대상 서비스 API 담당자에게 문의 \n* 각 담당자정보는 https://tde.sktelecom.com/wiki/pages/viewpage.action?pageId=395790584& 페이지 참고\n"
		},
		{
			"name": "QUESTION",
			"item": [
				{
					"name": "질문 등록",
					"id": "ac845a63-042f-497b-b083-eedf3f62ce8f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"A\",\n\t\"question\": \"해운대해수욕장 모임 인원제한 있나요?\",\n\t\"type\": \"REALTIME\",\n\t\"location\": {\n\t\t\"latitude\": 35.1586728,\n\t\t\"longitude\": 129.1598677,\n\t\t\"domainName\": \"해운대 해수욕장\",\n\t\t\"poiId\": 123412\n\t},\n\t\"routingCondition\": {\n\t\t\"ageRange\": 2,\n\t\t\"sex\": \"ALL\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"question"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "5818176f-8230-422e-b9b2-10dfd444b1e3",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "bae97d25-5f2d-4c58-b814-d326bce52184",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "042ab080-63f4-464a-8da3-5c59dd2dadbd",
							"name": "423 - Locked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Locked (WebDAV) (RFC 4918)",
							"code": 423,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8b1b082c-ef6d-48fb-8dfc-a66d83b75797",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ageRange\": \"<number>\",\n\t\"domainName\": \"<string>\",\n\t\"latitude\": \"<number>\",\n\t\"longitude\": \"<number>\",\n\t\"name\": \"<string>\",\n\t\"question\": \"<string>\",\n\t\"sex\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"userInfoId\": \"<string>\",\n\t\"poiId\": \"<string>\",\n\t\"location\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "질문 답변 연장, 유사질문 리스트 업데이트",
					"id": "12eefbf1-b79c-4f6a-a94a-bc3d6b005cd8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionId\": 5,\n\t\"extensionTime\": 3600000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"question"
							]
						},
						"description": "* 질문 답변 연장\n* 유사질문 리스트 업데이트 (backend 전용)\n"
					},
					"response": [
						{
							"id": "a489e27e-8d8a-4aae-a978-6d32405bf173",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questionId\": \"<number>\"\n\t}\n}"
						},
						{
							"id": "4750f251-36d9-4a3d-952e-6fa2823fbad1",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8048ed04-b2e5-492d-8c02-acd1d66f93ac",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "fe1ddb4f-4c6f-4e29-b29e-afda332348cf",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"extensionTime\": \"<number>\",\n\t\"similarQuestionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "0ef3610e-2e41-40c6-a781-fd3b5e203564",
			"description": "## 질문"
		},
		{
			"name": "REGION",
			"item": [
				{
					"name": "시도 검색",
					"id": "80aff562-ff23-44f5-86b5-2409d73fa940",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/region/province",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"region",
								"province"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "79b37df7-e0ad-42a8-971f-e02f8122c2e3",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"provinces\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"alternativeNames\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t]\n\t}\n}"
						},
						{
							"id": "eafe58e3-4e65-4d71-91d5-bd94148a4119",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f9d45dad-1803-4559-8ad8-cfa8bfdb5450",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "94ed760b-8716-45bb-9340-a9d45604bdaa",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"province\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/province",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"province"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "시군구 검색",
					"id": "10197744-a14a-41d6-9942-8ca0ca841f93",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"province\": [\n\t\t\"제주특별자치도\"\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/region/county",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"region",
								"county"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "217b131f-7367-4fd2-9f02-dace0c0e175d",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"counties\": [\n\t\t\t{\n\t\t\t\t\"province\": \"<string>\",\n\t\t\t\t\"county\": \"<string>\",\n\t\t\t\t\"fullName\": \"<string>\",\n\t\t\t\t\"alternativeNames\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"province\": \"<string>\",\n\t\t\t\t\"county\": \"<string>\",\n\t\t\t\t\"fullName\": \"<string>\",\n\t\t\t\t\"alternativeNames\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "61e451ad-c2ba-440a-b53e-aae61232445f",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f8ee634d-9d51-4dce-b8aa-7d92199afaf0",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "3918d09d-604e-45ba-acb4-37d4c074f0dc",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provinces\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"county\": \"<string>\",\n\t\"withAlternatives\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/region/county",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"region",
										"county"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "6e09a950-75ff-4da4-821f-0cd934dd6148",
			"description": "## 지역검색"
		},
		{
			"name": "REMARK",
			"item": [
				{
					"name": "나도 궁금해요 리스트에 유저 정보 추가 / 삭제",
					"id": "33d6caab-4119-48ed-b312-0c26ac743ce4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionId\": 5,\n\t\"userInfoId\": \"B\",\n\t\"type\": \"ADD\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/remark",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remark"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "77e0ed3e-003f-4519-a589-2e77701424f1",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"remarkId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "6259c120-e703-425b-9149-f51f95c35864",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9371064f-c8cd-4d7d-b071-6d7ffc745034",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "a6e640b5-0189-42a7-9394-ad92adfd1673",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c18702df-ab58-480f-96ff-fc9d0d1e7567",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"questionId\": \"<number>\",\n\t\"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remark",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remark"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "3f7a08dc-14c4-43df-a73e-3b3bd10632b3",
			"description": "## 나도 궁금해요"
		},
		{
			"name": "REWARD",
			"item": [
				{
					"name": "도움이 됐어요 리스트에 유저 정보 추가",
					"id": "cc163d16-788b-45ff-9d41-51f90edb5e4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"answerId\": 7,\n\t\"userInfoId\": \"C\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reward",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "44ad0189-c23d-482c-ac31-7dc76d636275",
							"name": "Successs",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"remarkId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c243a408-4ece-43d5-a389-e5ef866adb1a",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "06032d99-53c7-470e-89d8-81ae0516f775",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b49391a2-5a46-4af0-b3f1-4d446eeb8df2",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "68fad239-baf1-420b-ae88-c2a7bb8bf12d",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"answerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reward"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "1cff3e08-6317-4d18-9085-db7f765d56c7",
			"description": "## 도움이 됐어요"
		},
		{
			"name": "ROUTING",
			"item": [
				{
					"name": "라우팅 정보 생성",
					"id": "1c9fecbc-7861-4c28-b4d9-b39105fd7808",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoIds\": [\n\t\t\"B\",\n\t\t\"C\",\n\t\t\"D\",\n\t\t\"E\"\n\t],\n\t\"questionId\": 5,\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"MAIN\",\n\t\t\t\"domainName\": \"해운대구 우동\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"MAIN\",\n\t\t\t\"domainName\": \"유성구 상대동\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"REALTIME\",\n\t\t\t\"domainName\": \"마포구 아현동\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"RECENT\",\n\t\t\t\"domainName\": \"마포구 상암동\"\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/routing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routing"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "9c9b5096-85e1-4a36-a9fe-dd12dbf49851",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"routingId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "1ecb5fd8-e38e-4993-8c95-6f40b3052ced",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f0299399-15df-4f9d-a44b-fca3f6270ceb",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "31bd3f42-fbfc-4431-8e2f-bba895a01e2e",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "89cb79c2-fb08-464d-ab66-0a9d3dd9d2ec",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoIds\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"questionId\": \"<number>\",\n\t\"profiles\": [\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"<string>\",\n\t\t\t\"domainName\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/routing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"routing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "f3f24c40-52a4-4ea0-92dc-1ece1ce8ec9a",
			"description": "## 라우팅"
		},
		{
			"name": "SEARCH",
			"item": [
				{
					"name": "단일 질문-답변 검색",
					"id": "1b16b8e4-1c81-4af2-95b9-4c56ab12dd50",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionId\": 1,\n\t\"withAnswer\": true,\n\t\"bestOnly\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/question",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"question"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능\n* userInfoId가 없을 때는 질문 검색만함\n* userInfoId가 있을 때 A2A userInfo 테이블에 등록여부 확인 및 생성\n* 질문의 userInfoId와 parameter의 userInfoId가 같은 경우 보낸 질문 `N` 제거\n* 질문의 userInfoId와 parameter의 userInfoId가 다른 경우 받은 질문 `N` 제거\n* userInfoId parameter의 역할은 원칙적으로 질문을 특정 유저 ID로 조회함으로써 **받은 질문** 또는 **보낸 질문** 페이지에서 `N` 배지를 없애려는 때에만 사용\n* 기존에는 해당 유저 ID가 ‘받은 질문’ 또는 **보낸 질문**, **나도 궁금해요**에 해당하는 질문이 아닌 경우에는 Bad request가 발생하도록 하였으나, \n임의의 유저 ID로 보낸다고 해도 질문 검색의 본질을 해치는 것은 아니므로 `N` 배지제거 기능은 스킵하고 정상적으로 질문 답변이 검색되도록 변경 (log level WARN 생성)\n"
					},
					"response": [
						{
							"id": "2afc4c10-a1ce-470b-b3fc-f6df6b42e511",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "8df25196-6707-4707-9c5a-c0721e188a2d",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b232e98d-a5c5-4539-92e2-7ca7501f330b",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "412d8a71-23fc-46c2-8438-7bfacb1f0043",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionId\": \"<number>\",\n\t\"userInfoId\": \"<string>\",\n\t\"withAnswer\": \"<boolean>\",\n\t\"withMyAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/question",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"question"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "다중 질문-답변 검색",
					"id": "a5b2fe47-d082-4923-b455-f1051e11ecf5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"questionIds\": [\n\t\t1,\n\t\t2\n\t],\n\t\"bestOnly\": false,\n\t\"withAnswer\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/questions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"questions"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "78b12e4c-7cf4-4ad9-b4e8-276e0d89b224",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "13732f96-4c3b-444e-b879-3cda0c421932",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "9059499a-7fcc-4555-add7-3e4ca1023bf1",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e104a61c-72ce-44c7-831a-ad068f1eee70",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"questionIds\": [\n\t\t\"<number>\",\n\t\t\"<number>\"\n\t],\n\t\"withAnswer\": \"<boolean>\",\n\t\"bestOnly\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/questions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"questions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "my -> 받은 질문 / 답변 검색",
					"id": "f2c0d8a6-668f-4fdc-ae23-e9a836e6e855",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"B\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/routed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"routed"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "e02d2124-134a-457f-902a-b3bc7f2e1205",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f03ace1a-e155-4b66-bd5e-b0c74471794e",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "4b10a083-2cd3-41a8-9bca-8943bc1834d2",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "fbfcfb9e-c771-47ad-ad1f-e3b897fcec34",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target\": \"<string>\",\n\t\"userinfoId\": \"<string>\",\n\t\"sortBy\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/routed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"routed"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "my -> 보낸 질문 / 답변 검색",
					"id": "54b99216-43b1-4f9f-9ee6-0c670ef532f1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"target\": \"ALL\",\n\t\"userInfoId\": \"D\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/sent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"sent"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능"
					},
					"response": [
						{
							"id": "22a4a203-9c13-4b7b-b116-7b8f1af3e21c",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"questions\": [\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"questionId\": \"<number>\",\n\t\t\t\t\"groupId\": \"<string>\",\n\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"question\": \"<string>\",\n\t\t\t\t\"allocatedAdminId\": \"<string>\",\n\t\t\t\t\"similarQuestionIds\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"longitude\": \"<number>\",\n\t\t\t\t\t\"domainName\": \"<string>\",\n\t\t\t\t\t\"latitude\": \"<number>\",\n\t\t\t\t\t\"poiId\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"routingCondition\": {\n\t\t\t\t\t\"ageRange\": \"<number>\",\n\t\t\t\t\t\"sex\": {\n\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"masked\": \"<boolean>\",\n\t\t\t\t\"remarks\": [\n\t\t\t\t\t\"<number>\",\n\t\t\t\t\t\"<number>\"\n\t\t\t\t],\n\t\t\t\t\"nAnswers\": \"<number>\",\n\t\t\t\t\"answers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"userInfoId\": \"<string>\",\n\t\t\t\t\t\t\"answer\": \"<string>\",\n\t\t\t\t\t\t\"locations\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"best\": \"<boolean>\",\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"originAnswerId\": \"<number>\",\n\t\t\t\t\t\t\"originQuestionId\": \"<number>\",\n\t\t\t\t\t\t\"profile\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"masked\": {\n\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rewards\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"newlyUpdated\": \"<boolean>\",\n\t\t\t\t\"qAdministrations\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\t\t\"answerId\": \"<number>\",\n\t\t\t\t\t\t\"delegatedTo\": \"<string>\",\n\t\t\t\t\t\t\"managementType\": \"<string>\",\n\t\t\t\t\t\t\"managedAt\": \"<string>\",\n\t\t\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"similarQuestions\": [\n\t\t\t\t\t\"<object>\",\n\t\t\t\t\t\"<object>\"\n\t\t\t\t],\n\t\t\t\t\"recentActionAt\": \"<string>\",\n\t\t\t\t\"updatedAt\": \"<string>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"totalCount\": \"<number>\",\n\t\t\"popupType\": \"<string>\",\n\t\t\"from\": \"<string>\",\n\t\t\"to\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "48920cdc-b771-4208-bc2f-bbf08208dec2",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "134940ac-a7d3-4778-babc-89e6c0d534fe",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "c94a8903-5442-4124-b0ec-54c9a717c13d",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"target\": \"<string>\",\n\t\"page\": 1,\n\t\"size\": 30,\n\t\"from\": \"<string>\",\n\t\"to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"sent"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "f67e136b-81d9-4706-af3f-564d0712dc23",
			"description": "## 검색"
		},
		{
			"name": "STATISTIC",
			"item": [
				{
					"name": "어드민 대시보드 통계",
					"id": "e82493f6-61c7-462c-980f-5677470a2194",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"timeOffset\": 0.6846382848205543,\n\t\"adminId\": \"et v\",\n\t\"waitForUpdate\": \"incididunt nulla sint\",\n\t\"year\": false,\n\t\"month\": false,\n\t\"day\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/manager/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"manager",
								"statistics"
							]
						},
						"description": "> `post` Method도 동일하게 사용 가능\n* 순위 선정용 배치 처리 필요 (eg. 1시간 한번씩 수행)  \n* 대시보드, 통계 페이지용 API 통합  \n* 질문/답변 통계 구현 완료  \n* 신고 통계 구현중\n"
					},
					"response": [
						{
							"id": "e978ccea-87a6-467d-a405-9e268628061f",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"statistics\": {\n\t\t\t\"monthlyStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nUrgentNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAdminAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"monthlyAdminStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"averageAnswerDelay\": \"<number>\",\n\t\t\t\t\"answerAdminRank\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"averageInspectionDelay\": \"<number>\",\n\t\t\t\t\"inspectionRank\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"dailyStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nUrgentNotAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nAdminAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t},\n\t\t\t\"dailyAdminStatistics\": {\n\t\t\t\t\"date\": \"<number>\",\n\t\t\t\t\"adminId\": \"<string>\",\n\t\t\t\t\"nQuestions\": \"<number>\",\n\t\t\t\t\"nAnsweredQuestions\": \"<number>\",\n\t\t\t\t\"averageAnswerDelay\": \"<number>\",\n\t\t\t\t\"answerAdminRank\": \"<number>\",\n\t\t\t\t\"nComplaints\": \"<number>\",\n\t\t\t\t\"nInspectedComplaints\": \"<number>\",\n\t\t\t\t\"averageInspectionDelay\": \"<number>\",\n\t\t\t\t\"inspectionRank\": \"<number>\",\n\t\t\t\t\"createdAt\": \"<string>\"\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						{
							"id": "814703e9-7003-4be7-97bb-b72cee73afc5",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "2724ae43-3b99-465b-ba5c-752aced2b426",
							"name": "422 - UnprocessableEntity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "cd748f31-d7d2-4f6c-9dc3-f2cac4791d4c",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"timeOffset\": \"<number>\",\n\t\"adminId\": \"<string>\",\n\t\"waitForUpdate\": \"<string>\",\n\t\"year\": \"<boolean>\",\n\t\"month\": \"<boolean>\",\n\t\"day\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/manager/statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"manager",
										"statistics"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "d9a3db97-b63b-4462-af6c-acf1d8f4e16f",
			"description": "## 통계"
		},
		{
			"name": "USER",
			"item": [
				{
					"name": "유저 정보 등록",
					"id": "42c6e77b-1f47-427e-8eb8-4aa18f662db6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"lunaId\": \"A\",\n\t\"role\": \"GENERAL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_info"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "ab226f8a-828c-448b-b7d8-a8b894b12ff2",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "d3de7db3-53bf-4684-8c99-b7c141ffd823",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "b2483357-1d9c-431f-b512-c8c2b4693e06",
							"name": "409 - Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e4a75a73-eaa9-491b-bb39-f56963ec916c",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"lunaId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "유저 정보 수정",
					"id": "0721bc5c-49d9-4768-bce6-72b519639790",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"A\",\n\t\"role\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_info"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "c5fbdb89-22cc-4325-a4ab-08e6115d0a43",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "64d142ab-6df7-40fb-b7bc-436d23ed310d",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "e323591e-62b0-4be6-bec0-fea249260dc1",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\",\n\t\"role\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				},
				{
					"name": "유저 정보 삭제",
					"id": "1526192e-7631-4108-9c04-69b62040a0d9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userInfoId\": \"A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_info"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "c33ab5c1-82bc-43f4-be8b-d3e9eba0775e",
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"userInfoId\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "f62eccae-f960-48f9-ba6f-fe437f9a82ad",
							"name": "400 - BadRequest",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						},
						{
							"id": "1a3731b9-d0b1-4508-be70-bee21b42daa2",
							"name": "500 - InternalServerError",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userInfoId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_info"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"reason\": \"<string>\"\n\t}\n}"
						}
					]
				}
			],
			"id": "0f618d97-8c79-482b-b40b-4cdf9e89e174",
			"description": "## 유저"
		},
		{
			"name": "VERSION",
			"item": [
				{
					"name": "API 버전 정보",
					"id": "01eddda0-80de-4045-8728-b198502bd051",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						},
						"description": ">"
					},
					"response": [
						{
							"id": "6fe10e74-9fa2-4b9a-ac8f-4bc425c43140",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n\t\"statusCode\": \"<number>\",\n\t\"headers\": \"<string>\",\n\t\"multiValueHeaders\": \"<string>\",\n\t\"body\": {\n\t\t\"requestId\": \"<string>\",\n\t\t\"versions\": {\n\t\t\t\"revision\": \"<string>\",\n\t\t\t\"buildTimestamp\": \"<string>\",\n\t\t\t\"gitCommitHash\": \"<string>\",\n\t\t\t\"gitTag\": \"<string>\"\n\t\t}\n\t}\n}"
						}
					]
				}
			],
			"id": "3488e325-8778-42e1-8553-87091db059ad",
			"description": "## 버전 정보"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "<API Key>",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "912162c3-b237-432c-846f-545acb1c9907",
			"key": "baseUrl",
			"value": "https://api-dev.a2a.apollo-ai.io/v1",
			"type": "string"
		}
	]
}